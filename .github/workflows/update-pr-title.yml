name: Update Dependabot PR Title

on:
  pull_request:
    types:
      - opened
      - synchronize
      - edited

permissions:
  contents: read  # ✅ Allow checking out the repo
  pull-requests: write  # ✅ Allow updating PR titles

jobs:
  update-title:
    if: github.actor == 'dependabot[bot]'  # ✅ Run only for Dependabot PRs
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install html2text
        run: |
          sudo apt-get update
          sudo apt-get install -y html2text

      - name: Update PR Title Based on Module Updates and PR Body
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_BODY="${{ github.event.pull_request.body }}"

          # Log the PR body for debugging purposes
          echo "PR Body: $PR_BODY"

          # Convert HTML body to plain text using html2text
          PR_BODY_TEXT=$(echo "$PR_BODY" | html2text)

          # Log the PR body without HTML tags
          echo "PR Body (plain text): $PR_BODY_TEXT"

          # Ensure the PR body is not empty
          if [[ -z "$PR_BODY_TEXT" ]]; then
            echo "PR body is empty. Exiting."
            exit 0
          fi

          # Ensure modules.txt exists
          if [[ ! -f modules.txt ]]; then
            echo "modules.txt not found, creating an empty file."
            touch modules.txt
          fi

          # Determine prefix based on PR body
          if echo "$PR_BODY_TEXT" | grep -iqE "fix|security|CVE|bug"; then
            PREFIX="fix"
          elif echo "$PR_BODY_TEXT" | grep -iqE "breaking change|new feature|major update"; then
            PREFIX="feat"
          else
            PREFIX="feat"  # Default to feat if no keywords are found
          fi

          # Check if PR title already starts with fix: or feat:
          if [[ "$PR_TITLE" =~ ^fix: || "$PR_TITLE" =~ ^feat: ]]; then
            echo "PR title already follows convention, no change needed."
            exit 0
          fi

          # Check if PR title matches any module in modules.txt
          while IFS= read -r module || [[ -n "$module" ]]; do
            if [[ "$PR_TITLE" =~ "$module" ]]; then
              NEW_TITLE="$PREFIX: $PR_TITLE"
              echo "Updating PR title to: $NEW_TITLE"

              # Update PR title using GitHub API
              curl -X PATCH -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                -H "Accept: application/vnd.github.v3+json" \
                -d '{"title": "'"$NEW_TITLE"'"}' \
                "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}"

              exit 0
            fi
          done < modules.txt

          echo "PR does not match any modules in modules.txt. No title changes needed."
